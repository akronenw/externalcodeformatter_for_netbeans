OpenIDE-Module-Display-Category=Editing
OpenIDE-Module-Long-Description=\
	This plugin helps you to apply to a common code style in a team of Eclipse JDT, IntelliJ and NetBeans IDE users. Either you can use the <a href="https://github.com/google/google-java-format">Google Code Formatter</a> or the <a href="https://help.eclipse.org/kepler/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fpreferences%2Fjava%2Fcodestyle%2Fref-preferences-formatter.htm">Eclipse Java Code Formatter</a> inside the NetBeans IDE, depending on whatever your co-workers use. The original formatting engine of Eclipse and Google is embedded and allows you to format the source code the same way as e.g. your Eclipse co-workers do.\n\
	<h3><font color="#FF0000">Known issue: When the Eclipse or Google formatter is used the line-breakpoints at the formatted lines are lost. Class/Method/Field breakpoints can be preserved.</font></h3>\n\
	<h2>Features:</h2>\n\
	<ul>\n\
	<li>Global configuration and project specific configuration</li>\n\
	<li>On save action (Disabled by default)</li>\n\
	<li>Shows the used formatter in a notification (Disabled by default)</li>\n\
	<li>Supports profiles for Eclipse formatter (since 1.6)</li>\n\
	<li>Supports format of selected text (since 1.7)</li>\n\
	<li>Preserve breakpoints (experimental) (since 1.8)</li>\n\
	<li>Code templates for @formatter:on/off for Eclipse formatter (since 1.9)</li>\n\
	<li>Supports <a href="https://code.google.com/a/eclipselabs.org/p/workspacemechanic/">Workspace Mechanic</a> configuration file for Eclipse formatter (since 1.10)</li>\n\
	<li>Support configuration from .settings/org.eclipse.jdt.core.prefs (absolute and relative paths) for Eclipse formatter (since 1.10)</li>\n\
	<li>On save action: Introduced option for formatting only the changed lines (since 1.10)</li>\n\
	<li>Support configuration of linefeed for Eclipse formatter (since 1.10)</li>\n\
	<li>Support configuration of source level for Eclipse formatter (since 1.10)</li>\n\
	<li>Support for macro invocation for Eclipse formatter (since 1.12)</li>\n\
	<li>Support for guarded documents (documents that are created by the NetBeans GUI builder, guarded blocks are skipped of course, but everything in between can be formatted) (since 1.13)</li>\n\
	</ul>\n\
	<h2>Note:</h2>\nPlease note that this plugin only provides support for formatting. Eclipse users may miss the application of save-actions like "adding @Override annotations" or "member sort order". Such AST-based transformations are not provided by this plugin.\n\n\
	<ul>\n\
	<li>Original idea from Willie Scholtz: <a href="http://epochcoder.blogspot.com/2013/08/import-eclipse-formatter-into-netbeans.html">http://epochcoder.blogspot.com/2013/08/import-eclipse-formatter-into-netbeans.html</a>.</li>\n\
	</ul>\n\n\
	<p>Licensed under the <a href="http://funfried.github.io/ecf4nb/licenses.html">Eclipse Public License, Version 2.0</a></p>\n\
	<p>This plugin uses third-party libraries, please check their licenses <a href="http://funfried.github.io/ecf4nb/dependencies.html">here</a></p>\n\
	<p>For more information go to <a href="http://funfried.github.io/ecf4nb/">http://funfried.github.io/ecf4nb/</a> or <a href="https://github.com/funfried/externalcodeformatter_for_netbeans">https://github.com/funfried/externalcodeformatter_for_netbeans</a></p>\n\
	<p>Provide defects, request for enhancements and feedback at <a href="https://github.com/funfried/externalcodeformatter_for_netbeans/issues">https://github.com/funfried/externalcodeformatter_for_netbeans/issues</a>\n</p>\n\
	<p>Compatible to NetBeans 8.2+ and JDK8+.</p>\n\n\
	<p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=926F5XBCTK2LQ&source=url"><img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="btn_donate_SM.gif" border="0"></a></p>
OpenIDE-Module-Name=External Java Code Formatters
OpenIDE-Module-Short-Description=External Java Code Formatters Integration for NetBeans
